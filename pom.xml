<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>org.wwarn</groupId>
		<artifactId>wwarn-parent</artifactId>
		<version>2.1-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
  <groupId>com.eemi.gwt</groupId>
  <artifactId>tour</artifactId>
  <version>1.2-SNAPSHOT</version>
  <packaging>jar</packaging>
  
	<name>gwttour</name>
	<description>GWT API for the hopscotch framework</description>
	<inceptionYear>2013</inceptionYear>

	<properties>
		<!--Trick to deploy releases (using mvn release:perform) to the local file 
			system. The release is actually performed from target/checkout, which is 
			why we need those ../../ . Notice that after deployment, you should commit 
			and push to the git repository. -->
		<!--<altDeploymentRepository>release-repo::default::file:../../releases</altDeploymentRepository>-->
		<!-- Compiler properties -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
		<!-- GWT version -->
		<gwt.version>2.8.1</gwt.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- github server corresponds to entry in ~/.m2/settings.xml -->
	    	<github.global.server>github</github.global.server>
		<gwt.maven.plugin.version>2.8.1</gwt.maven.plugin.version>
		<javaVersion>1.8</javaVersion>
		<sonar.java.source>${javaVersion}</sonar.java.source>
		<sonar.java.target>${javaVersion}</sonar.java.target>
		<maven.compiler.source>${javaVersion}</maven.compiler.source>
		<maven.compiler.target>${javaVersion}</maven.compiler.target>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<!-- Include GwtTourScriptLoader.gwt.xml -->
		<resources>
		    <resource>
			<directory>src/main/java</directory>
			<includes>
			    <include>org/wwarn/mapcore/**/*.xml</include>
			    <include>org/wwarn/mapcore/**/*.java</include>
			    <include>org/wwarn/mapcore/**/*.properties</include>
			</includes>
			<excludes>
			    <exclude>**/*Test.java</exclude>
			    <exclude>**/GwtTest*.java</exclude>
			</excludes>
		    </resource>
		    <resource>
			<directory>src/main/resources</directory>
			<includes>
			    <include>*.css</include>
			    <include>**/*.*</include>
			</includes>
		    </resource>
		</resources>

		<plugins>
		<!-- GWT Maven Plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>${gwt.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test</goal>
                            <!--<goal>generateAsync</goal>-->
                        </goals>
                    </execution>
                </executions>
                <!-- Plugin configuration. There are many available options, see
                  gwt-maven-plugin documentation at codehaus.org -->
                <configuration>
                    <module>com.eemi.gwt.tour.GwtTour</module>
                    <mode>htmlunit</mode>
                    <style>${gwt.style}</style>
                    <includes>**/Gwt*Suite.java</includes>
                    <testTimeOut>3000</testTimeOut>
                    <timeOut>3000</timeOut>
                </configuration>
            </plugin>
			<!--<plugin>-->
			    <!--<artifactId>maven-deploy-plugin</artifactId>-->
			    <!--<version>2.7</version>-->
			    <!--<configuration>-->
			        <!--<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>-->
			    <!--</configuration>-->
			<!--</plugin>	  -->
        	<!--<plugin>-->
	            <!--<groupId>com.github.github</groupId>-->
	            <!--<artifactId>site-maven-plugin</artifactId>-->
	            <!--<version>0.8</version>-->
	            <!--<configuration>-->
	                <!--<message>Maven artifacts for ${project.version}</message>  &lt;!&ndash; git commit message &ndash;&gt;-->
	                <!--<noJekyll>true</noJekyll>                                  &lt;!&ndash; disable webpage processing &ndash;&gt;-->
	                <!--<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> &lt;!&ndash; matches distribution management repository url above &ndash;&gt;-->
	                <!--<branch>refs/heads/mvn-repo</branch>                       &lt;!&ndash; remote branch name &ndash;&gt;-->
	                <!--<includes><include>**/*</include></includes>-->
	                <!--<repositoryName>gwt-tour</repositoryName>      	&lt;!&ndash; github repo name &ndash;&gt;-->
	                <!--<repositoryOwner>kerbymart</repositoryOwner>    &lt;!&ndash; github username  &ndash;&gt;-->
	            <!--</configuration>-->
	            <!--<executions>-->
	              <!--&lt;!&ndash; run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase &ndash;&gt;-->
	              <!--<execution>-->
	                <!--<goals>-->
	                  <!--<goal>site</goal>-->
	                <!--</goals>-->
	                <!--<phase>deploy</phase>-->
	              <!--</execution>-->
	            <!--</executions>-->
        	<!--</plugin>		                -->
            <!-- Default plugins -->
			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-release-plugin</artifactId>-->
				<!--<version>2.1</version>&lt;!&ndash;$NO-MVN-MAN-VER$ &ndash;&gt;-->
				<!--<configuration>-->
					<!--<useReleaseProfile>false</useReleaseProfile>-->
				<!--</configuration>-->
			<!--</plugin>-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.source}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>  
	<!--<distributionManagement>-->
	    <!--<repository>-->
	        <!--<id>github</id>-->
	        <!--<name>GitHub ${project.artifactId} Repository</name>-->
	        <!--<url>https://raw.github.com/kerbymart/${project.artifactId}/mvn-repo</url>-->
	    <!--</repository>-->
	<!--</distributionManagement>  -->
</project>
